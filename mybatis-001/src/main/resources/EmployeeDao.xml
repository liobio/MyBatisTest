<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--    namespace:名称空间;写接口的全类名，相当于告诉MyBatis这个配置文件是实现哪个接口的-->
<mapper namespace="com.liobio.dao.EmployeeDao">

    <!--    select:用来定义一个查询操作-->
    <!--    id:方法名，相当于这个配置是对于某个方法的实现-->
    <!--    resultType :指定方法运行后的返回值类型，( 查询操作必须指定的)-->
    <!--    parameterType	将会传入这条语句的参数的类全限定名或别名。这个属性是可选的，
            因为 MyBatis 可以通过类型处理器（TypeHandler）推断出具体传入语句的参数，默认值为未设置（unset）。-->
    <select id="getEmployeeById" parameterType="Integer" resultType="com.liobio.bean.Employee">
        select *
        from t_employee
        where id = #{id}
    </select>
    <!--增删改不用写返回值类型-->
    <update id="updateEmployee" parameterType="com.liobio.bean.Employee">
        update t_employee
        set employee_name = #{employee_name},
            gender        = #{gender},
            email         = #{email}
        where id = #{id}
    </update>
    <delete id="deleteEmployeeById" parameterType="Integer">
        delete
        from t_employee
        where id = #{id}
    </delete>

    <insert id="insertEmployee" parameterType="com.liobio.bean.Employee">
        insert into t_employee(employee_name, gender, email)
        values (#{employee_name}, #{gender}, #{email})
    </insert>
</mapper>